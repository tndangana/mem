swagger: "2.0"
info:
  description: "ACALONE AFRICA TECHNOLOGY"
  version: "1.0.0"
  title: "Membership Subcription System"
tags:
  externalDocs:
    description: "Find out more"
    url: "#"

consumes:
  - application/json
produces:
  - application/json
schemes:
  - "http"
  - "https"
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header

paths:
  # -----------------------------------------------------------USER API START------------------------------------------------------------
  /api/user:
    get:
      tags:
        - "user"
      summary: "get all users"
      description: ""
      consumes:
        - "application/json"
      produces:
        - "application/json"
      security:
        - Bearer: []
      responses:
        200:
          description: "Success"
        404:
          description: "No content"

  /api/user/{userId}:
    put:
      tags:
        - "user"
      summary: "Updated user"
      description: "This can only be done by the logged in user."
      operationId: "updateUser"
      produces:
        - "application/xml"
        - "application/json"
      security:
        - Bearer: []
      parameters:
        - name: "userId"
          in: "path"
          description: "user id that need to be updated"
          required: true
          type: "string"
        - in: "body"
          name: "user"
          description: "Updated user object"
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        400:
          description: "Invalid user supplied"
        404:
          description: "User not found"

    delete:
      tags:
        - "user"
      summary: "Delete user"
      description: "This can only be done by the logged in user."
      operationId: "deleteUser"
      produces:
        - "application/json"
      security:
        - Bearer: []
      parameters:
        - name: "userId"
          in: "path"
          description: "The user id that needs to be deleted"
          required: true
          type: "string"
      responses:
        400:
          description: "Invalid username supplied"
        404:
          description: "User not found"

    get:
      tags:
        - "user"
      summary: "Find user by ID"
      description: "Returns a single user"
      operationId: "getUserById"
      produces:
        - "application/json"
      security:
        - Bearer: []
      parameters:
        - name: "userId"
          in: "path"
          description: "ID of user to return"
          required: true
          type: "string"
          format: "string"
      responses:
        200:
          description: "successful operation"
        400:
          description: "Invalid ID supplied"
        404:
          description: "User not found"

  /api/user/login:
    post:
      tags:
        - "user"
      summary: "Logs user into the system"
      description: ""
      operationId: "loginUser"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "user"
          description: "Created user object"
          required: true
          schema:
            $ref: "#/definitions/UserCred"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "string"
        400:
          description: "Invalid username/password supplied"

  /api/register-user:
    post:
      tags:
        - "user"
      summary: "Create user"
      description: "This can only be done by the logged in user."
      operationId: "createUser"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "user"
          description: "Created user object"
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        default:
          description: "successful operation"

definitions:
  # schemas:
  User:
    type: object
    required:
      - firstName
      - lastName
      - userName
      - email
      - account_type
      - password
      - mobile
      - dob
      - title
    properties:
      _id:
        type: string
        format: string
        readOnly: true
      title:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      dob:
        type: string
        format: date
      userName:
        type: string
      email:
        type: string
      mobile:
        type: string
      password:
        type: string
      account_type:
        type: string
      isActive:
        type: boolean

  UserCred:
    type: object
    required:
      - userName
      - password
    properties:
      userName:
        type: string
      password:
        type: string
